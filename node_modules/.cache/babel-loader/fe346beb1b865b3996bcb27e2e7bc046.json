{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport default function usePromise(promiseCreator, deps) {\n  _s();\n\n  // 로딩중 / 완료 / 실패에 대한 상태 관리\n  const [loading, setLoading] = useState(false);\n  const [resolved, setResolved] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const process = async () => {\n      setLoading(true);\n\n      try {\n        const resolved = await promiseCreator();\n        setResolved(resolved);\n      } catch (e) {\n        setError(e);\n      }\n\n      setLoading(false);\n    };\n\n    process(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  return [loading, resolved, error];\n}\n\n_s(usePromise, \"+zV3STQhjZJjlLm0MO8cohZZQJE=\");","map":{"version":3,"sources":["/Users/hyera/Documents/localhost/react-firebase/React-firebase-test/src/pages/news/usePromise.js"],"names":["useState","useEffect","usePromise","promiseCreator","deps","loading","setLoading","resolved","setResolved","error","setError","process","e"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,UAAT,CAAoBC,cAApB,EAAoCC,IAApC,EAA0C;AAAA;;AACxD;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,OAAO,GAAG,YAAY;AAC3BL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACH,cAAMC,QAAQ,GAAG,MAAMJ,cAAc,EAArC;AACAK,QAAAA,WAAW,CAACD,QAAD,CAAX;AACA,OAHD,CAGE,OAAOK,CAAP,EAAU;AACXF,QAAAA,QAAQ,CAACE,CAAD,CAAR;AACA;;AACDN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KATD;;AAUAK,IAAAA,OAAO,GAXQ,CAYf;AACA,GAbQ,EAaNP,IAbM,CAAT;AAeA,SAAO,CAACC,OAAD,EAAUE,QAAV,EAAoBE,KAApB,CAAP;AACA;;GAtBuBP,U","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function usePromise(promiseCreator, deps) {\n\t// 로딩중 / 완료 / 실패에 대한 상태 관리\n\tconst [loading, setLoading] = useState(false);\n\tconst [resolved, setResolved] = useState(null);\n\tconst [error, setError] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst process = async () => {\n\t\t\tsetLoading(true);\n\t\t\ttry {\n\t\t\t\tconst resolved = await promiseCreator();\n\t\t\t\tsetResolved(resolved);\n\t\t\t} catch (e) {\n\t\t\t\tsetError(e);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t};\n\t\tprocess();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, deps);\n\n\treturn [loading, resolved, error];\n}\n"]},"metadata":{},"sourceType":"module"}